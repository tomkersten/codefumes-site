- content_for(:page_layout_class) do
  = "project-page #{@project.visibility}-project"
.header
  - if !@project.viewable_by?(current_user)
    .access_denied
      %h1.title= "'#{params[:public_key]}' is a private project"
  - else     
    - unless @project.visibility_acknowledged?
      = render :partial => 'community/projects/new_project_reminder', :locals => {:project => @project}
    %h1.title
      = @project
      - priveleged_user_or_owner_content(@project) do
        = link_to 'admin', edit_my_project_path(@project), :title => "Edit Project", :class => 'edit-project right'
.content
  .attributes
    %ul.inline.selectable    
      %li.attribute
        = link_to "Build status", short_uri_path(@project), :id => 'build_status', :class => 'selected'
      - unless @project.unique_custom_attributes.empty?
        - @project.unique_custom_attributes.each do |attribute|
          %li.attribute.custom_attribute
            = link_to "#{attribute}", show_project_attributes_path(@project, attribute), :id => "#{attribute}_attribute"
      - else
        %li.attribute
          = link_to "Codefumes is all about tracking attributes. You should try it!", {}, :class => 'intro_to_attributes'
  .visualization
    %h3.title.shadow Build Status (Over Time)
    .canvas
      - if @project.covered_by_plan?
        #canvas.js_build_status
      - else
        #upgrade_required
          %h3 Visuals would be here. Please upgrade your account.
  %ul.commits
    - @project.recent_commits.each do |commit|
      - css_classes = commit_classes_for(commit)
      - css_classes += " head" if commit == @project.commit_head
      %li.commit{:class => css_classes}
        .header.division
          .columns.two_columns
            .column
              - if commit.message.blank?
                %h3.title.shadow.no_commit_message [No commit message? Tsk! Tsk!]
              - else
                %h3.title.shadow
                  = "#{commit.short_identifier}: #{commit.short_message.gsub("\n", "<br/>")}"
                - if commit.merge?
                  %p= "Merge of: #{commit.parent_identifiers(:short).to_sentence}"
            .column.align_right
              %h3.build_duration
                - avg_build_duration_text_for(commit)
        .content
          .columns.two_columns
            .column
              %h5.title Standard Data
              %dl.payload
                %dt.key Identifier:
                %dd.value= commit.identifier
                %dt.key Author:
                %dd.value= commit.author
                %dt.key Committer:
                %dd.value= commit.committer
                %dt.key Authored at:
                %dd.value= commit.authored_at
                %dt.key Committed at:
                %dd.value= commit.committed_at
                %dt.key Lines added:
                %dd.value= commit.line_additions
                %dt.key Lines deleted:
                %dd.value= commit.line_deletions
                %dt.key Total lines:
                %dd.value= commit.line_total
                %dt.key Files affected:
                %dd.value= commit.affected_file_count
            .column
              %h5.title Custom Attributes
              - unless commit.custom_attributes.empty?
                %dl.payload
                  - for custom_attribute in commit.custom_attributes
                    %dt.key= "#{custom_attribute.name}:"
                    %dd.value= custom_attribute.value
  .footer
    .tracking_ideas
      = render :partial => 'community/projects/tracking_ideas'
